solcast:
  api_key: !secret solcast_api
  resource_id: !secret solcast_resource
  api_limit: 20
  disable_ssl_check: False
  disable_automatic_forecast_fetching: True
  disable_automatic_history_fetching: True

input_number:
  set_goodwe_dod:
    name: Set Goodwe DoD
    min: 0
    max: 70
    mode: box
    unit_of_measurement: '%'
    #step: 1

automation:
  - id: '1606211453192'
    alias: Solcast Update
    description: Update the Solcast prediction for the day
    trigger:
      - platform: time_pattern
        minutes: /45
    condition:
      - condition: sun
        before: sunset
        before_offset: -00:30:00
        after: sunrise
        after_offset: 00:30:00
    action:
      - service: solcast.update_forecast
        data: {}
    mode: single

  ## 9% at 6am
  - id: '1605879219607'
    alias: Goodwe DoD Day
    description: Set max DoD to 11% during the day - leave battery for evening use
    trigger:
      - platform: time
        at: 05:30:00
    condition: []
    action:
      - service: solcast.update_forecast
        data: {}
      - delay: '00:00:10' # Waits x seconds
      - service: input_number.set_value
        target:
          entity_id: input_number.set_goodwe_dod
        data:
          value: >
            {% set soc_today = states('sensor.solcast_forecast')|int %}
            {% if soc_today <= 7 %}1
            {% else %}11{% endif -%}
    mode: single

  # At 8pm set SoC based on forecast
  - alias: Goodwe DoD Night 
    description: Set DoD based on conditions
    trigger:
      - platform: time
        at: '20:00:00'
    condition:
      # if current SoC above 85%
      - condition: numeric_state
        entity_id: sensor.goodwe_battery_soc
        above: '85'
      # if loadshedding is below stage 5
      - condition: numeric_state
        entity_id: sensor.eskom_loadshedding_stage
        below: 5
      # if battery SoH is above 50 for some safety
      - condition: numeric_state
        entity_id: sensor.goodwe_battery_soh
        above: '50'
    action:
      - service: solcast.update_forecast
        data: {}
      - delay: '00:00:10' # Waits x seconds
      # cancel timers
      - service: timer.cancel
        data_template:
          entity_id: timer.main_geyser
      - service: timer.cancel
        data_template:
          entity_id: timer.front_geyser
      # turn off geysers
      - service: switch.turn_off
        data:
          entity_id: switch.main_bathroom_geyser
      - service: switch.turn_off
        data:
          entity_id: switch.front_bathroom_geyser
      # set DoD
      - service: input_number.set_value
        target:
          entity_id: input_number.set_goodwe_dod
        data:
          value: >
            {% set soc_tomorrow = state_attr('sensor.solcast_forecast', 'tomorrow') %}
            {% if soc_tomorrow >= 18 %}70
            {% elif soc_tomorrow >= 14 and soc_tomorrow < 18 %}60
            {% elif soc_tomorrow >= 12 and soc_tomorrow < 14 %}55
            {% elif soc_tomorrow >= 11 and soc_tomorrow < 12 %}50
            {% elif soc_tomorrow >= 10 and soc_tomorrow < 11 %}45
            {% elif soc_tomorrow >= 9 and soc_tomorrow < 10 %}40
            {% elif soc_tomorrow >= 8 and soc_tomorrow < 9 %}35
            {% elif soc_tomorrow >= 7 and soc_tomorrow < 8 %}30
            {% else %}1{% endif -%}
    mode: single

  ## When Eskom turns on LoadShedding set 11%
  - alias: Goodwe 11% when LoadShedding start above stage 4
    trigger:
      #- platform: state
      #  entity_id: input_boolean.loadshedding_slot_active
      #  from: 'off'
      #  to: 'on'
      - platform: numeric_state
        entity_id: sensor.eskom_loadshedding_stage
        above: 2
        for:
          minutes: 1
    condition:
      - condition: numeric_state
        entity_id: sensor.eskom_loadshedding_stage
        above: 4
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.set_goodwe_dod
        data:
          value: 11
    mode: single

  ## When less than 4 kWh left on solcat set 1%
  - alias: Goodwe When less than 4 kWh left on solcat set 1%
    trigger:
      - platform: numeric_state
        entity_id: sensor.solcast_forecast
        below: '4'
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.set_goodwe_dod
        data:
          value: 1
    mode: single

  # Input that sets DoD on GoodWe Inverter
  # Everything else will set this input. This allows for graphing+tracking.
  - id: '1620734902145'
    alias: 'Set DoD on Goodwe based on input'
    trigger:
      - entity_id: input_number.set_goodwe_dod
        platform: state
    condition: []
    action:
      - service: goodwe.set_ongrid_battery_dod
        data:
          entity_id: sensor.goodwe_inverter
          ongrid_battery_dod: '{{ states.input_number.set_goodwe_dod.state|int }}'
    mode: single