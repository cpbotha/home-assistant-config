---
sensor:
  - platform: template
    sensors:
      # Template sensor to display input value only
      ac_central_mode:
        friendly_name: "AC Central Mode"
        value_template: >-
          {% set temp_comfort = 24 %}
          {% set temp_avg = states('sensor.average_temperature_outside_last_1_day')|int %}
          {% if temp_avg >= (temp_comfort + 4) %}cool
          {% elif temp_avg >= (temp_comfort) and temp_avg < (temp_comfort + 4) %}auto
          {% elif temp_avg >= (temp_comfort - 4) and temp_avg < (temp_comfort) %}auto
          {% elif temp_avg < (temp_comfort) %}heat
          {% else %}auto{% endif -%}

automation:
  # Start ACs if enough power
  - alias: Start ACs if enough power
    trigger:
      - platform: time
        at: '7:50:00'
      - platform: time
        at: '11:00:00'
      - platform: time
        at: '12:00:00'
    condition:
      - condition: numeric_state
        entity_id: sensor.solcast_forecast_energy_today_predicted
        above: '25'
    action:
      # Office
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.solcast_forecast_energy_today_predicted
                above: '25'
            sequence:
              - service: script.ac
                data:
                  ac: "climate.midea_ac_32985348871179"
                  speed: "Auto"
                  mode: >
                    {{ states('sensor.ac_central_mode') }}
      # MainBed
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.solcast_forecast_energy_today_predicted
                above: '25'
              - condition: template
                value_template: "{{ ('11:00' <= states('sensor.time') < '15:00')  }}"
            sequence:
              - service: script.ac
                data:
                  ac: "climate.midea_ac_30786325862093"
                  speed: "Auto"
                  mode: >
                    {{ states('sensor.ac_central_mode') }}
      # ChildBed
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.solcast_forecast_energy_today_predicted
                above: '25'
              - condition: template
                value_template: "{{ ('12:00' <= states('sensor.time') < '15:00')  }}"
            sequence:
              - service: script.ac
                data:
                  ac: "climate.midea_ac_30786325862153"
                  speed: "Auto"
                  mode: >
                    {{ states('sensor.ac_central_mode') }}

  # Stops ACs
  - alias: Stop ACs if started with enough power
    trigger:
      - platform: time
        at: '15:50:00'
      - platform: time
        at: '15:30:00'
      - platform: time
        at: '15:00:00'
    condition:
      - condition: numeric_state
        entity_id: sensor.solcast_forecast_energy_today_predicted
        above: '25'
    action:
      # Office
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.solcast_forecast_energy_today_predicted
                above: '25'
              - condition: template
                value_template: "{{ ('15:50' <= states('sensor.time') <= '18:00')  }}"
            sequence:
              - service: script.ac
                data:
                  ac: "climate.midea_ac_32985348871179"
                  mode: "off"
      # MainBed
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.solcast_forecast_energy_today_predicted
                above: '25'
              - condition: template
                value_template: "{{ ('15:30' <= states('sensor.time') <= '18:00')  }}"
            sequence:
              - service: script.ac
                data:
                  ac: "climate.midea_ac_30786325862093"
                  mode: "off"
      # ChildBed
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.solcast_forecast_energy_today_predicted
                above: '25'
              - condition: template
                value_template: "{{ ('15:00' <= states('sensor.time') <= '18:00')  }}"
            sequence:
              - service: script.ac
                data:
                  ac: "climate.midea_ac_30786325862153"
                  mode: "off"

script:
  ######################################################################
  # Re-usable script to change ac to silent fan in the am
  ######################################################################
  # Example:
  ######################################################################
  # - service: script.ac
  #   data:
  #     ac: "climate.xxx"
  #     speed: "Auto" (optional - default is Auto)
  #     mode: "fan_only" (optional - default is fan_only)
  ######################################################################
  ac:
    sequence:
      # Set variables
      - variables:
          fan_speed: >
            {% if speed is defined %}
              {{ speed }}
            {% else %}
              Auto
            {% endif %}
          ac_mode: >
            {% if mode is defined %}
              {{ mode }}
            {% else %}
              fan_only
            {% endif %}
      # If AC not in mode - set to mode
      - choose:
          - conditions:
              - condition: template
                value_template: >
                  {{ (states(ac) != ac_mode) }}
            sequence:
              - service: script.log
                data:
                  icon: ':thermometer:'
                  object: 'Aircon'
                  message: >
                    {{ state_attr(ac, 'friendly_name') }} ac_mode: {{ ac_mode }}
              - service: climate.set_hvac_mode
                target:
                  entity_id: "{{ ac }}"
                data:
                  hvac_mode: "{{ ac_mode }}"
      # Wait a sec
      - delay: '00:00:01'
      # If AC not at same fan speed -set
      - choose:
          - conditions:
              - condition: template
                value_template: >
                  {{ (state_attr(ac, 'fan_mode') != fan_speed) }}
            sequence:
              - service: script.log
                data:
                  icon: ':thermometer:'
                  object: 'Aircon'
                  message: >
                    {{ state_attr(ac, 'friendly_name') }} fan_speed: {{ fan_speed }}
              - service: climate.set_fan_mode
                data:
                  fan_mode: "{{ fan_speed }}"
                target:
                  entity_id: "{{ ac }}"
